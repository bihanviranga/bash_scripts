#!/usr/bin/env bash
: '
This script plays the playlist name provided as $1 in vlc.
If no playlist by that name is found in $PLAYLIST_ROOT,
it searches the Albums folder,
and then the whole PLAYLIST_ROOT, and plays anything that contains the keyword.
'

# The path to the music directory should be saved in
# an environment variable PLAYLIST_ROOT
# The script will exit with code 1 if the variable is not set
if [ -z "$PLAYLIST_ROOT" ]
then
	echo "PLAYLIST_ROOT not set. Please set it to point to the music directory"
	exit 1
fi

# If no argument is given
if [ -z "$1" ]
then
	echo "No argument provided. Playing all on shuffle.."
	vlc -Z $PLAYLIST_ROOT &
# If a playlist with the given name exists
elif [ -f "$PLAYLIST_ROOT$1.xspf" ]
then
	echo "Playing playlist $1.."
	vlc "$PLAYLIST_ROOT$1.xspf" &
# Otherwise, try searching for directories
else
	IFS=$'\n'
	cmdstr="vlc -Z"
	dirList=$(find "$PLAYLIST_ROOT" -maxdepth 1 -type d -iname "*$1*")
	# First, look for top level directories with this name
	if [ -n "$dirList" ]
	then
		echo "Found top level directory with name. Playing.."
		for filename in $dirList;
		do
			cmdstr+=" '$filename'"
		done
		unset IFS
		eval "$cmdstr &"
	else
		# Otherwise, look for albums with this name
		albumList=$(find "$PLAYLIST_ROOT/Albums" -maxdepth 1 -type d -iname "*$1*")
		if [ -n "$albumList" ]
		then
			# found albums
			echo "Albums for keyword found. Playing.."
			for filename in $albumList;
			do
				cmdstr+=" '$filename'"
			done
			unset IFS
			eval "$cmdstr &"
		else
			# no albums - search master
			fileList=$(find "$PLAYLIST_ROOT" -type f -iname "*$1*")
			if [ -n "$fileList" ]
			then
				# Files found
				echo "Files for keyword found. Playing.."
				for filename in $fileList;
				do
					cmdstr+=" '$filename'"
				done
				unset IFS
				eval "$cmdstr &"
			else
				# No files found
				unset IFS
				echo "Nothing found for keyword $1. Playing all on shuffle.."
				cmdstr="$cmdstr $PLAYLIST_ROOT"
				eval "$cmdstr &"
			fi
		fi
	fi
fi

